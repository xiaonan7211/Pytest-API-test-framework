# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 动作训练服务
  allureStory: 获取动作训练结束数据接口
  mark: ActionTrain


get_action_train_ending:
    host: ${{host()}}
    url: /s/v1/fitness/action-train/ending-data
    method: GET
    detail: 正常的训练ID获取
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      id: "$cache{action_train_starting_02_trainId}"
    dependence_case: true
    # 依赖的数据
    dependence_case_data:
      - case_id: action_train_ending
        dependent_data:
          - dependent_type: request
            jsonpath: false
            replace_key: false

    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言为 0"
    sql:



get_action_train_ending_error:
    host: ${{host()}}
    url: /s/v1/fitness/action-train/ending-data
    method: GET
    detail: 错误的ID获取
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      id: "2222222222222"
    dependence_case: false
    # 依赖的数据
    dependence_case_data:

    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言"
      message:
        jsonpath: $.message
        type: ==
        value: 此动作训练记录不存在
        AssertType:
        message: "message 断言"
    sql:


get_action_train_ending_null:
    host: ${{host()}}
    url: /s/v1/fitness/action-train/ending-data
    method: GET
    detail: id字段不存在获取
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
    dependence_case: false
    # 依赖的数据
    dependence_case_data:

    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: 请求参数为空
        AssertType:
        message: "message 断言"

      value:
        jsonpath: $.value
        type: ==
        value: null
        AssertType:
        message: "value 断言"

    sql: