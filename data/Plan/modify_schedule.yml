# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 计划服务
  allureStory: 修改训练日接口
  mark: Plan

modify_schedule_01:
    host: ${{host()}}
    url: /s/v1/fitness/plan/modify-schedule
    method: PUT
    detail: 正常参数修改训练日
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      [
        {
          "id": "",
          "avatarId": "",
          "planGroupId": "",
          "planId": "",
          "totalDuration": 0,
          "planTrainTime": "${{get_time_day()}}",
          "times": 0,
          "power": 0,
          "seq": 0
        }
      ]
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.id
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.avatar_id
            replace_key: $.data.avatarId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_group_id
            replace_key: $.data.planGroupId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_id
            replace_key: $.data.planId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.total_duration
            replace_key: $.data.totalDuration
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.times
            replace_key: $.data.times
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.seq
            replace_key: $.data.seq
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言为 0"
      not_jsonpath:
        jsonpath: $cache{modify_schedule_planTrainTime}
        type: ==
        value: $.sql_data[*].plan_train_time
        AssertType: SQL
        message: "planTrainTime 断言为"
    sql:
      - SELECT plan_train_time FROM t_plan_lessons WHERE id="$cache{modify_schedule_id}"
    setup_sql:
      - SELECT * from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data[0].id
        # 自定义的缓存名称
        name: modify_schedule_id

      - type: request
        jsonpath: $.data[0].planTrainTime
        # 自定义的缓存名称
        name: modify_schedule_planTrainTime


modify_schedule_error:
    host: ${{host()}}
    url: /s/v1/fitness/plan/modify-schedule
    method: PUT
    detail: 参数错误修改训练日期, 期望校验日期格式
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      [
        {
          "id": "",
          "avatarId": "",
          "planGroupId": "",
          "planId": "",
          "totalDuration": 0,
          "planTrainTime": "3546465456",
          "times": 0,
          "power": 0,
          "seq": 0
        }
      ]
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.id
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.avatar_id
            replace_key: $.data.avatarId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_group_id
            replace_key: $.data.planGroupId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_id
            replace_key: $.data.planId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.total_duration
            replace_key: $.data.totalDuration
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.times
            replace_key: $.data.times
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.seq
            replace_key: $.data.seq
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
      not_jsonpath:
        jsonpath: $cache{modify_schedule_planTrainTime}
        type: not_eq
        value: $.sql_data[*].plan_train_time
        AssertType: SQL
        message: "planTrainTime 断言为"
    sql:
      - SELECT plan_train_time FROM t_plan_lessons WHERE id="$cache{modify_schedule_id}"
    setup_sql:
      - SELECT * from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data[0].id
        # 自定义的缓存名称
        name: modify_schedule_id

      - type: request
        jsonpath: $.data[0].planTrainTime
        # 自定义的缓存名称
        name: modify_schedule_planTrainTime


modify_schedule_null:
    host: ${{host()}}
    url: /s/v1/fitness/plan/modify-schedule
    method: PUT
    detail: 日期参数为空，期望修改失败
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      [
        {
          "id": "",
          "avatarId": "",
          "planGroupId": "",
          "planId": "",
          "totalDuration": 0,
          "planTrainTime": "",
          "times": 0,
          "power": 0,
          "seq": 0
        }
      ]
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.id
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.avatar_id
            replace_key: $.data.avatarId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_group_id
            replace_key: $.data.planGroupId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_id
            replace_key: $.data.planId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.total_duration
            replace_key: $.data.totalDuration
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.times
            replace_key: $.data.times
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.seq
            replace_key: $.data.seq
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
      not_jsonpath:
        jsonpath: $cache{modify_schedule_planTrainTime}
        type: not_eq
        value: $.sql_data[*].plan_train_time
        AssertType: SQL
        message: "planTrainTime 断言为"
    sql:
      - SELECT plan_train_time FROM t_plan_lessons WHERE id="$cache{modify_schedule_id}"
    setup_sql:
      - SELECT * from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data[0].id
        # 自定义的缓存名称
        name: modify_schedule_id

      - type: request
        jsonpath: $.data[0].planTrainTime
        # 自定义的缓存名称
        name: modify_schedule_planTrainTime


modify_schedule_id_null:
    host: ${{host()}}
    url: /s/v1/fitness/plan/modify-schedule
    method: PUT
    detail: 课时id为空，期望修改失败
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      [
        {
          "id": "",
          "avatarId": "",
          "planGroupId": "",
          "planId": "",
          "totalDuration": 0,
          "planTrainTime": "${{get_time_day()}}",
          "times": 0,
          "power": 0,
          "seq": 0
        }
      ]
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.avatar_id
            replace_key: $.data.avatarId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_group_id
            replace_key: $.data.planGroupId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_id
            replace_key: $.data.planId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.total_duration
            replace_key: $.data.totalDuration
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.times
            replace_key: $.data.times
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.seq
            replace_key: $.data.seq
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
    sql:
    setup_sql:
      - SELECT * from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1


modify_schedule_not_login:
    host: ${{host()}}
    url: /s/v1/fitness/plan/modify-schedule
    method: PUT
    detail: 不登录修改，期望修改失败
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      [
        {
          "id": "",
          "avatarId": "",
          "planGroupId": "",
          "planId": "",
          "totalDuration": 0,
          "planTrainTime": "${{get_time_day()}}",
          "times": 0,
          "power": 0,
          "seq": 0
        }
      ]
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.id
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.avatar_id
            replace_key: $.data.avatarId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_group_id
            replace_key: $.data.planGroupId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_id
            replace_key: $.data.planId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.total_duration
            replace_key: $.data.totalDuration
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.times
            replace_key: $.data.times
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.seq
            replace_key: $.data.seq
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
      message:
        jsonpath: $.message
        type: ==
        value: 数据为空
        AssertType:
        message: "message 断言"
      not_jsonpath:
        jsonpath: $cache{modify_schedule_planTrainTime}
        type: not_eq
        value: $.sql_data[*].plan_train_time
        AssertType: SQL
        message: "planTrainTime 断言为"
    sql:
      - SELECT plan_train_time FROM t_plan_lessons WHERE id="$cache{modify_schedule_id}"
    setup_sql:
      - SELECT * from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data[0].id
        # 自定义的缓存名称
        name: modify_schedule_id

      - type: request
        jsonpath: $.data[0].planTrainTime
        # 自定义的缓存名称
        name: modify_schedule_planTrainTime


modify_schedule_field_null:
    host: ${{host()}}
    url: /s/v1/fitness/plan/modify-schedule
    method: PUT
    detail: 缺少字段修改，预期400
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      [
        {
          "avatarId": "",
          "planGroupId": "",
          "planId": "",
          "totalDuration": 0,
          "times": 0,
          "power": 0,
          "seq": 0
        }
      ]
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.avatar_id
            replace_key: $.data.avatarId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_group_id
            replace_key: $.data.planGroupId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.plan_id
            replace_key: $.data.planId
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.total_duration
            replace_key: $.data.totalDuration
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.times
            replace_key: $.data.times
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.seq
            replace_key: $.data.seq
    assert:
      # 断言接口状态码
      statu_code: 400
    sql:
    setup_sql:
      - SELECT * from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
