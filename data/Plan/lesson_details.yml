# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 计划服务
  allureStory: 查询课时详情接口
  mark: Plan

get_lesson_details:
    host: ${{host()}}
    url: /s/v1/fitness/plan/lesson-details
    method: GET
    detail: 正确的ID查询课时详情
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      {
        "lessonId": ""
      }
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.lessonId
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言为 0"
      # 断言查询出的课时id与接口返回是否一直
      ids:
        jsonpath: $.value.lesson.id
        type: ==
        value: $.sql_data[0].id
        AssertType: SQL
        message: "断言ids"
      # 断言查询出的分组id与接口返回是否一致
      group_id:
        jsonpath: $.value.lesson.planGroupId
        type: ==
        value: $.sql_data[0].plan_group_id
        AssertType: SQL
        message: "断言      group_id"
      # 断言查询出的time与接口返回是否一致
      train_time:
        jsonpath: $.value.lesson.planTrainTime
        type: ==
        value: $.sql_data[0].plan_train_time
        AssertType: SQL
        message: "断言    train_time"
      # 断言返回的动作ID集合
      actions_id:
        jsonpath: $.value.actions[*].action.actionId
        type: ==
        value: $.sql_data[*].action_id
        AssertType: SQL
        message: "断言     actions_id"
      # 断言返回的动作ID集合
      is_plan_id:
        jsonpath: $.value.lesson.planId
        type: ==
        value: $.sql_data[0].plan_id
        AssertType: SQL
        message: "断言   is_plan_id"
    sql:
      - SELECT pl.id, pl.plan_group_id, pl.plan_train_time, pa.action_id, pa.plan_id from t_plan_lessons as pl, t_plan_actions as pa WHERE pl.plan_id=pa.plan_id
        and pl.id="$cache{lesson_details_id}"
    setup_sql:
      - SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data.lessonId
        # 自定义的缓存名称
        name: lesson_details_id


get_lesson_details_error:
    host: ${{host()}}
    url: /s/v1/fitness/plan/lesson-details
    method: GET
    detail: 错误的ID查询课时详情
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      {
        "lessonId": "23432423432534"
      }
    dependence_case: false
    # 依赖同一个接口多个数据
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
      message:
        jsonpath: $.message
        type: ==
        value: 计划不存在
        AssertType:
        message: "断言message"
    sql:


get_lesson_details_null:
    host: ${{host()}}
    url: /s/v1/fitness/plan/lesson-details
    method: GET
    detail: 参数为空查询课时详情
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      {
        "lessonId": ""
      }
    dependence_case: false
    # 依赖同一个接口多个数据
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
      message:
        jsonpath: $.message
        type: ==
        value: 数据为空
        AssertType:
        message: "断言message"
    sql:


get_lesson_details_not_login:
    host: ${{host()}}
    url: /s/v1/fitness/plan/lesson-details
    method: GET
    detail: 不登录时查询课时详情
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      {
        "lessonId": ""
      }
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.lessonId
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"
      # 断言查询出的课时id与接口返回是否一直
      message:
        jsonpath: $.message
        type: ==
        value: 数据为空
        AssertType:
        message: "message断言"
      # 断言查询出的课时id与接口返回是否一直
    sql:
    setup_sql:
      - SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id="$cache{gymera}" and status=1
        ORDER BY create_time ASC LIMIT 1) LIMIT 1
