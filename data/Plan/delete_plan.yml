# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 计划服务
  allureStory: 删除计划接口
  mark: Plan

delete_plan:
    host: ${{host()}}
    url: /s/v1/fitness/plan/withdraw
    method: DELETE
    detail: 正常删除计划
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: data
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      ignore:
    dependence_case: true
    # 依赖同一个接口多个数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.id
            replace_key: $.data.ignore
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
#        message: "errorCode 断言为 0"
      not_jsonpath:
        jsonpath: -2
        type: ==
        value: $.sql_data[*].status
        AssertType: SQL
#        message: "errorCode 断言为 0"
    sql:
      - select status from t_plan where id="$cache{delete_plan_id}"
    setup_sql:
      - SELECT id from t_plan WHERE gymer_id="$cache{gymera}"
        and status=1 LIMIT 1
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data.ignore
        # 自定义的缓存名称
        name: delete_plan_id

delete_plan_01:
    host: ${{host()}}
    url: /s/v1/fitness/plan/withdraw
    method: DELETE
    detail: 删除不存在的计划，期望删除失败
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: data
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      ignore: 21132143212213
    dependence_case: false
    # 依赖同一个接口多个数据
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
#        message: "errorCode 断言为 0"
      message:
        jsonpath: $.message
        type: ==
        value: 计划不存在
        AssertType:
#        message: "errorCode 断言为 0"
    sql:


delete_plan_02:
    host: ${{host()}}
    url: /s/v1/fitness/plan/withdraw
    method: DELETE
    detail: 不登陆情况下删除计划，期望校验登录
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: data
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      ignore: PLN22092617274900001004A9F004C
    dependence_case: false
    # 依赖同一个接口多个数据
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
#        message: "errorCode 断言为 0"
      message:
        jsonpath: $.message
        type: ==
        value: 数据为空
        AssertType:
#        message: "errorCode 断言为 0"
    sql:
