# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 用户数据服务
  allureStory: 查询健康数据接口
  mark: GymerFitnessData

get_health_data_login:
    host: ${{host()}}
    url: /s/v1/fitness/gymer-fitness-data/health-data
    method: GET
    detail: 正常登录查询健康数据
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
    dependence_case: false
    # 依赖的数据
    dependence_case_data:

    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言为 0"

      message:
        jsonpath: $.message
        type: ==
        value: 成功
        AssertType:
        message: "message 断言"

      value:
        jsonpath: $.value
        type: not_eq
        value: {}
        AssertType:
        message: "value 断言"

    sql:


get_health_data_not_login:
    host: ${{host()}}
    url: /s/v1/fitness/gymer-fitness-data/health-data
    method: GET
    detail: 未登录查询健康数据
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
    dependence_case: false
    # 依赖的数据
    dependence_case_data:

    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"

      message:
        jsonpath: $.message
        type: ==
        value: 数据为空
        AssertType:
        message: "message 断言"

      value:
        jsonpath: $.value
        type: ==
        value: null
        AssertType:
        message: "value 断言"

    sql:
