# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 计划训练服务
  allureStory: 计划训练过程接口
  mark: PlanTrain

process_plantrain_01:
    host: ${{host()}}
    url: /s/v1/fitness/plantrain/process
    method: POST
    detail: 正常的参数开始计划训练过程
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data: &data
      {
        "id": "$cache{start_plantrain_01ID}",
        "actionId": "",
        "seq": 3,
        "leftForceMode": "${{random_int(1,3)}}",
        "rightForceMode": "${{random_int(1,3)}}",
        "leftForce": "${{random_int(10,20)}}",
        "rightForce": "${{random_int(10,20)}}",
        "leftLength": "${{random_int(1,8)}}",
        "rightLength": "${{random_int(1,8)}}",
        "span": 20
      }

    dependence_case: true

    dependence_case_data:
      # 依赖训练开始用例
      - case_id: start_plantrain_01
        dependent_data:
          - dependent_type: request
            jsonpath: false
            replace_key: false

      # 通过计划ID 查询到 动作ID
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.action_id
            replace_key: $.data.actionId

    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言为 0"

      message:
        jsonpath: $.message
        type: ==
        value:
        AssertType:
        message: "message 断言"

      not_jsonpath:
        jsonpath: $cache{gymera}
        type: ==
        value: $.sql_data[0].gymer_id
        AssertType: SQL
        message: "gymerID 断言"

      not_jsonpath1:
        jsonpath: $cache{process_plantrain_01_seq}
        type: ==
        value: $.sql_data[*].seq
        AssertType: SQL
        message: "seq 断言"

      not_jsonpath2:
        jsonpath: $cache{process_plantrain_01_leftForce}
        type: ==
        value: $.sql_data[*].leftforce
        AssertType: SQL
        message: "leftforce 断言"

      not_jsonpath3:
        jsonpath: $cache{process_plantrain_01_rightForce}
        type: ==
        value: $.sql_data[*].rightforce
        AssertType: SQL
        message: "rightforce 断言"

      not_jsonpath4:
        jsonpath: $cache{process_plantrain_01_leftLength}
        type: ==
        value: $.sql_data[*].leftlength
        AssertType: SQL
        message: "leftlength 断言"

      not_jsonpath5:
        jsonpath: $cache{process_plantrain_01_rightLength}
        type: ==
        value: $.sql_data[*].rightlength
        AssertType: SQL
        message: "rightlength 断言"

      not_jsonpath6:
        jsonpath: $cache{process_plantrain_01_leftForceMode}
        type: ==
        value: $.sql_data[*].leftforcemode
        AssertType: SQL
        message: "leftforcemode 断言"

      not_jsonpath7:
        jsonpath: $cache{process_plantrain_01_rightForceMode}
        type: ==
        value: $.sql_data[*].rightforcemode
        AssertType: SQL
        message: "rightforcemode 断言"

      not_jsonpath8:
        jsonpath: plan-train.process
        type: ==
        value: $.sql_data[*].business_type
        AssertType: SQL
        message: "business_type 断言"

    sql:
      - select metric_value as seq, gymer_id from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="train.seq"

      - select metric_value as leftforce from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="left.force"

      - select metric_value as rightforce from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="right.force"

      - select metric_value as leftlength from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="left.length"

      - select metric_value as rightlength from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="right.length"

      - select metric_value as leftforcemode from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="left.force.mode"

      - select metric_value as rightforcemode, business_type from t_gymer_fitness_data where business_id="$cache{start_plantrain_01ID}"
        and metric_id="right.force.mode"

    setup_sql:
      - SELECT action_id FROM t_plan p, t_plan_actions pa WHERE p.id=pa.plan_id
        and p.id="$cache{insert_plan_ID}"

    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data.leftForceMode
        # 自定义的缓存名称
        name: process_plantrain_01_leftForceMode

      - type: request
        jsonpath: $.data.rightForceMode
        # 自定义的缓存名称
        name: process_plantrain_01_rightForceMode

      - type: request
        jsonpath: $.data.leftForce
        # 自定义的缓存名称
        name: process_plantrain_01_leftForce

      - type: request
        jsonpath: $.data.rightForce
        # 自定义的缓存名称
        name: process_plantrain_01_rightForce

      - type: request
        jsonpath: $.data.leftLength
        # 自定义的缓存名称
        name: process_plantrain_01_leftLength

      - type: request
        jsonpath: $.data.rightLength
        # 自定义的缓存名称
        name: process_plantrain_01_rightLength

      - type: request
        jsonpath: $.data.seq
        # 自定义的缓存名称
        name: process_plantrain_01_seq


process_plantrain_error:
    host: ${{host()}}
    url: /s/v1/fitness/plantrain/process
    method: POST
    detail: 错误的训练ID 开始计划训练过程
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      {
        "id": "3354543543443",
        "actionId": "23432532524234234",
        "seq": 3,
        "leftForceMode": "22",
        "rightForceMode": "22",
        "leftForce": "22",
        "rightForce": "22",
        "leftLength": "22",
        "rightLength": "22"
      }

    dependence_case: false
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"

      message:
        jsonpath: $.message
        type: ==
        value:
        AssertType:
        message: "message 断言"

    sql:


process_plantrain_null_field:
    host: ${{host()}}
    url: /s/v1/fitness/plantrain/process
    method: POST
    detail: 缺少字段提交训练中的计划
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
    dependence_case: false
    dependence_case_data:
    assert:
      # 断言接口状态码
      status_code: 400
    sql:


process_plantrain_not_login:
    host: ${{host()}}
    url: /s/v1/fitness/plantrain/process
    method: POST
    detail: 不登录情况下，提交训练中的数据
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: json
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      <<: *data

    dependence_case: false
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言为 0"

      message:
        jsonpath: $.message
        type: ==
        value: 数据为空
        AssertType:
        message: "message 断言"

    sql:

