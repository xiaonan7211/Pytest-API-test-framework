# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 课堂服务
  allureStory: 取消课堂预约接口
  mark: Classroom

classroom_cancel_reserve:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/cancel-reserve
    method: POST
    detail: 正确的ID取消课堂预约
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      roomId: "$cache{classroom_reserve_copyID}"
    dependence_case: true
    # 依赖的数据
    dependence_case_data: &case_data
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.g_count
            set_cache: classroom_cancel_reserve_count
      # 先预约，确保有数据
      - case_id: classroom_reserve_copy
        dependent_data:
          - dependent_type: request
            jsonpath: false
            replace_key: false

    assert:
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: 课堂取消预约成功
        AssertType:
        message: "message 断言"

      not_jsonpath:
        jsonpath: "$cache{classroom_cancel_reserve_count}"
        type: ==
        value: $.sql_data[*].g_count
        AssertType: SQL
        message: "count 断言"

    sql:
      - SELECT count(*) as g_count FROM t_class_room_reserve WHERE gymer_id="$cache{gymera}"
    setup_sql:
      - SELECT count(*) as g_count FROM t_class_room_reserve WHERE gymer_id="$cache{gymera}"


classroom_cancel_reserve_paramError:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/cancel-reserve
    method: POST
    detail: 错误的课堂ID取消预约
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      roomId: 2344234325353224
    dependence_case: false
    # 依赖的数据
    dependence_case_data:
    assert:
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: class-room-detail.isnull
        AssertType:
        message: "message 断言"
    sql:


classroom_cancel_reserve_notLogin:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/cancel-reserve
    method: POST
    detail: 不登录时取消课堂预约
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      roomId: "$cache{classroom_reserve_copyID}"
    dependence_case: true
    # 依赖的数据
    dependence_case_data:
      *case_data

    assert:
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: 用户不存在
        AssertType:
        message: "message 断言"

      not_jsonpath:
        jsonpath: "$cache{classroom_cancel_reserve_count} + 1"
        type: cl_eq
        value: $.sql_data[*].g_count
        AssertType: SQL
        message: "count 断言"

    sql:
      - SELECT count(*) as g_count FROM t_class_room_reserve WHERE gymer_id="$cache{gymera}"
    setup_sql:
      - SELECT count(*) as g_count FROM t_class_room_reserve WHERE gymer_id="$cache{gymera}"

    teardown:
      # 删除
      - case_id: classroom_cancel_reserve_copy
        # 删除的话，我们是直接发送请求的，因此我们这里写 send_request
        send_request:
          # 直接拿缓存的数据
          - dependent_type: cache
            # 这个是缓存的key
            cache_data: "classroom_reserve_copyID"
            # 通过relace_key 去替换 classroom_cancel_reserve_copy 中的 room
            replace_key: $.data.roomId


classroom_cancel_reserve_copy:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/cancel-reserve
    method: POST
    detail: 取消课堂预约，默认不执行用例
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run: false
    data:
      roomId:
    dependence_case: false
    # 依赖的数据
    dependence_case_data:
    assert:
      errorCode:
        jsonpath: $.code
        type: ==
        value: -1
        AssertType:
        message: "errorCode 断言"
    sql:
    setup_sql:
