# 公共参数
case_common:
  allureEpic: Gymery
  allureFeature: 课堂服务
  allureStory: 根据日期获取课堂列表接口
  mark: Classroom

get_classroom_date:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/date
    method: GET
    detail: 正常的开始与结束时间获取课堂详情
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      startTime:
      endTime:
    dependence_case: true
    # 依赖的数据
    dependence_case_data: &case_data
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.start_time
            replace_key: $.data.startTime

          - dependent_type: sqlData
            jsonpath: $.end_time
            replace_key: $.data.endTime
    assert: &assert
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: "get-class-rooms-by-date.succeed"
        AssertType:
        message: "message 断言"

      id:
        jsonpath: $.value[*].id
        type: ==
        value: $.sql_data[*].id
        AssertType: SQL
        message: "id 断言"

      name:
        jsonpath: $.value[*].name
        type: ==
        value: $.sql_data[*].name
        AssertType: SQL
        message: "name 断言"

      avatarId:
        jsonpath: $.value[*].avatarId
        type: ==
        value: $.sql_data[*].avatar_id
        AssertType: SQL
        message: "avatarId 断言"

      gradeId:
        jsonpath: $.value[*].gradeId
        type: ==
        value: $.sql_data[*].grade_id
        AssertType: SQL
        message: "gradeId 断言"

      isOpenVideo:
        jsonpath: $.value[*].isOpenVideo
        type: bool_eq
        value: $.sql_data[*].is_open_video
        AssertType: SQL
        message: "isOpenVideo 断言"

      duration:
        jsonpath: $.value[*].duration
        type: ==
        value: $.sql_data[*].duration
        AssertType: SQL
        message: "duration 断言"

      limitNumber:
        jsonpath: $.value[*].limitNumber
        type: ==
        value: $.sql_data[*].limit_number
        AssertType: SQL
        message: "limitNumber 断言"

      coachId:
        jsonpath: $.value[*].coachId
        type: ==
        value: $.sql_data[*].coach_id
        AssertType: SQL
        message: "coachId 断言"

#      status:
#        jsonpath: $.value.status
#        type: ==
#        value: $.sql_data[*].status
#        AssertType: SQL
#        message: "status 断言"

      gymerId:
        jsonpath: $.value[*].coach.gymerId
        type: ==
        value: $.sql_data[*].gymer_id
        AssertType: SQL
        message: "gymerId 断言"

      coach_name:
        jsonpath: $.value[*].coach.name
        type: ==
        value: $.sql_data[*].c_name
        AssertType: SQL
        message: "coach_name 断言"

      coach_avatarId:
        jsonpath: $.value[*].coach.avatarId
        type: ==
        value: $.sql_data[*].c_avatarID
        AssertType: SQL
        message: "coach_avatarId 断言"

      coach_intro:
        jsonpath: $.value[*].coach.intro
        type: ==
        value: $.sql_data[*].c_intro
        AssertType: SQL
        message: "coach_intro 断言"

      coach_description:
        jsonpath: $.value[*].coach.description
        type: ==
        value: $.sql_data[*].c_description
        AssertType: SQL
        message: "coach_description 断言"

      openVideo:
        jsonpath: $.value[*].openVideo
        type: bool_eq
        value: $.sql_data[*].is_open_video
        AssertType: SQL
        message: "openVideo 断言"

    sql:
      - SELECT * FROM `t_class_room`
        WHERE start_time >= "$cache{get_classroom_date_start}"
        and end_time <= "$cache{get_classroom_date_end}";

      # 教练查询
      - SELECT c.gymer_id, c.name c_name, c.avatar_id c_avatarID,
        c.intro c_intro, c.description c_description
        FROM `t_class_room` cr LEFT JOIN t_coach c
        ON cr.coach_id=c.gymer_id
        WHERE cr.start_time >= "$cache{get_classroom_date_start}"
        and cr.end_time <= "$cache{get_classroom_date_end}";

    setup_sql: &setup_sql
      - SELECT
        CONCAT(SUBSTRING(cr.start_time, 1, 10), " 00:00:00") start_time,
        CONCAT(SUBSTRING(cr.end_time, 1, 10), " 23:59:59") end_time
        FROM  t_class_room cr LEFT JOIN t_class_room_reserve crr
        ON cr.id=crr.room_id and crr.room_id is NULL
        ORDER BY RAND() LIMIT 1;
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data.startTime
        # 自定义的缓存名称
        name: get_classroom_date_start

      - type: request
        jsonpath: $.data.endTime
        # 自定义的缓存名称
        name: get_classroom_date_end


get_classroom_date_02:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/date
    method: GET
    detail: 跨日期查询获取课堂列表数据
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      startTime:
      endTime:
    dependence_case: true
    # 依赖的数据
    dependence_case_data:
      - case_id: self
        dependent_data:
          - dependent_type: sqlData
            jsonpath: $.start_time
            replace_key: $.data.startTime

          - dependent_type: sqlData
            jsonpath: $.end_time
            replace_key: $.data.endTime
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: "get-class-rooms-by-date.succeed"
        AssertType:
        message: "message 断言"

      id:
        jsonpath: $.value[*].id
        type: ==
        value: $.sql_data[*].id
        AssertType: SQL
        message: "id 断言"

      name:
        jsonpath: $.value[*].name
        type: ==
        value: $.sql_data[*].name
        AssertType: SQL
        message: "name 断言"

      avatarId:
        jsonpath: $.value[*].avatarId
        type: ==
        value: $.sql_data[*].avatar_id
        AssertType: SQL
        message: "avatarId 断言"

      gradeId:
        jsonpath: $.value[*].gradeId
        type: ==
        value: $.sql_data[*].grade_id
        AssertType: SQL
        message: "gradeId 断言"

      isOpenVideo:
        jsonpath: $.value[*].isOpenVideo
        type: bool_eq
        value: $.sql_data[*].is_open_video
        AssertType: SQL
        message: "isOpenVideo 断言"

      duration:
        jsonpath: $.value[*].duration
        type: ==
        value: $.sql_data[*].duration
        AssertType: SQL
        message: "duration 断言"

      limitNumber:
        jsonpath: $.value[*].limitNumber
        type: ==
        value: $.sql_data[*].limit_number
        AssertType: SQL
        message: "limitNumber 断言"

      coachId:
        jsonpath: $.value[*].coachId
        type: ==
        value: $.sql_data[*].coach_id
        AssertType: SQL
        message: "coachId 断言"

#      status:
#        jsonpath: $.value.status
#        type: ==
#        value: $.sql_data[*].status
#        AssertType: SQL
#        message: "status 断言"

      gymerId:
        jsonpath: $.value[*].coach.gymerId
        type: ==
        value: $.sql_data[*].gymer_id
        AssertType: SQL
        message: "gymerId 断言"

      coach_name:
        jsonpath: $.value[*].coach.name
        type: ==
        value: $.sql_data[*].c_name
        AssertType: SQL
        message: "coach_name 断言"

      coach_avatarId:
        jsonpath: $.value[*].coach.avatarId
        type: ==
        value: $.sql_data[*].c_avatarID
        AssertType: SQL
        message: "coach_avatarId 断言"

      coach_intro:
        jsonpath: $.value[*].coach.intro
        type: ==
        value: $.sql_data[*].c_intro
        AssertType: SQL
        message: "coach_intro 断言"

      coach_description:
        jsonpath: $.value[*].coach.description
        type: ==
        value: $.sql_data[*].c_description
        AssertType: SQL
        message: "coach_description 断言"

      openVideo:
        jsonpath: $.value[*].openVideo
        type: bool_eq
        value: $.sql_data[*].is_open_video
        AssertType: SQL
        message: "openVideo 断言"

    sql:
      - SELECT * FROM `t_class_room`
        WHERE start_time >= "$cache{get_classroom_date_02_start}"
        and end_time <= "$cache{get_classroom_date_02_end}";

      # 教练查询
      - SELECT c.gymer_id, c.name c_name, c.avatar_id c_avatarID,
        c.intro c_intro, c.description c_description
        FROM `t_class_room` cr LEFT JOIN t_coach c
        ON cr.coach_id=c.gymer_id
        WHERE cr.start_time >= "$cache{get_classroom_date_02_start}"
        and cr.end_time <= "$cache{get_classroom_date_02_end}";

    setup_sql:
      - SELECT
        CONCAT(SUBSTRING(cr.start_time, 1, 10), " 00:00:00") start_time,
        CONCAT(INSERT(SUBSTRING(cr.start_time, 1, 10), 9, 2, (SUBSTRING(cr.start_time, 9, 2) + 1)),
        " 23:59:59") end_time
        FROM  t_class_room cr LEFT JOIN t_class_room_reserve crr
        ON cr.id=crr.room_id and crr.room_id is NULL
        ORDER BY RAND() LIMIT 1;
    current_request_set_cache:
      # 1、response 从响应中提取内容  2、request从请求中提取内容
      - type: request
        jsonpath: $.data.startTime
        # 自定义的缓存名称
        name: get_classroom_date_02_start

      - type: request
        jsonpath: $.data.endTime
        # 自定义的缓存名称
        name: get_classroom_date_02_end


get_classroom_date_paramError:
    host: ${{host()}}
    url: /s/v1/fitness/classroom/date
    method: GET
    detail: 日期参数错误查询课堂列表
    headers:
      Content-Type: application/json
#      Cache-Control: no-cache
#      Content-Length:
      # 这里token的值，写的是存入缓存的名称
#      Authorization: $cache{login_cookie}
    # 请求的数据，是 params 还是 json、或者file、data
    requestType: params
    # 是否执行，空或者 true 都会执行
    is_run:
    data:
      startTime: "2022-13-14 00:00:00"
      endTime: "2022-13-14 23:59:59"
    dependence_case: false
    # 依赖的数据
    dependence_case_data:
    assert:
      # 断言接口状态码
      errorCode:
        jsonpath: $.code
        type: ==
        value: 0
        AssertType:
        message: "errorCode 断言"

      message:
        jsonpath: $.message
        type: ==
        value: "get-class-rooms-by-date.succeed"
        AssertType:
        message: "message 断言"

      value:
        jsonpath: $.value
        type: ==
        value: []
        AssertType:
        message: "value 断言"

    sql:
