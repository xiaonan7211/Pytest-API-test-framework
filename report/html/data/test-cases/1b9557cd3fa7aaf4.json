{"uid":"1b9557cd3fa7aaf4","name":"test_lesson_details[不登录时查询课时详情]","fullName":"test_case.Plan.test_lesson_details.TestLessonDetails#test_lesson_details","historyId":"d7a7b607d24ef6e31af5e0e440db89eb","time":{"start":1669002865878,"stop":1669002865888,"duration":10},"description":"\n        :param :\n        :return:\n        ","descriptionHtml":"<pre><code>    :param :\n    :return:\n</code></pre>\n","status":"broken","statusMessage":"utils.other_tools.exceptions.DataAcquisitionFailed: sql 数据查询失败，请检查setup_sql语句是否正确【SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id=\"USR22082018194900001003CB70029\" and status=1 ORDER BY create_time ASC LIMIT 1) LIMIT 1】","statusTrace":"self = <utils.mysql_tool.mysql_control.SetUpMySQL object at 0x00000238563D8B80>\nsql = ['SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id=\"USR22082018194900001003CB70029\" and status=1 ORDER BY create_time ASC LIMIT 1) LIMIT 1']\n\n    def setup_sql_data(self, sql: Union[List, None]) -> Dict:\n        \"\"\"\n            处理前置请求sql\n            :param sql:\n            :return:\n            \"\"\"\n        sql = ast.literal_eval(cache_regular(str(sql)))\n        try:\n            data = {}\n            if sql is not None:\n                for i in sql:\n                    # 判断断言类型为查询类型的时候，\n                    if i[0:6].upper() == 'SELECT':\n>                       sql_date = self.query(sql=i)[0]\nE                       IndexError: tuple index out of range\n\nutils\\mysql_tool\\mysql_control.py:131: IndexError\n\nThe above exception was the direct cause of the following exception:\n\nself = <test_lesson_details.TestLessonDetails object at 0x000002385656CF40>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.code', 'message': 'errorCode 断言为 0', 'type': '==', ....age断言', 'type': '==', ...}}, 'current_request_set_cache': None, 'data': {'lessonId': ''}, 'dependence_case': True, ...}\ncase_skip = None\n\n    @allure.story(\"查询课时详情接口\")\n    @pytest.mark.Plan\n    @pytest.mark.parametrize('in_data', eval(str_redata), ids=[i['detail'] for i in re_data])\n    def test_lesson_details(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n>       res = RequestControl(in_data).http_request()\n\ntest_case\\Plan\\test_lesson_details.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\logging_tool\\log_decorator.py:24: in swapper\n    res = func(*args, **kwargs)\nutils\\logging_tool\\run_time_decorator.py:21: in swapper\n    res = func(*args, **kwargs)\nutils\\requests_tool\\request_control.py:441: in http_request\n    DependentCase(self.__yaml_case).get_dependent_data()\nutils\\requests_tool\\dependent_case.py:246: in get_dependent_data\n    _dependent_data = DependentCase(self.__yaml_case).is_dependent()\nutils\\requests_tool\\dependent_case.py:179: in is_dependent\n    self._dependent_type_for_sql(\nutils\\requests_tool\\dependent_case.py:114: in _dependent_type_for_sql\n    sql_data = SetUpMySQL().setup_sql_data(sql=setup_sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.mysql_tool.mysql_control.SetUpMySQL object at 0x00000238563D8B80>\nsql = ['SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id=\"USR22082018194900001003CB70029\" and status=1 ORDER BY create_time ASC LIMIT 1) LIMIT 1']\n\n    def setup_sql_data(self, sql: Union[List, None]) -> Dict:\n        \"\"\"\n            处理前置请求sql\n            :param sql:\n            :return:\n            \"\"\"\n        sql = ast.literal_eval(cache_regular(str(sql)))\n        try:\n            data = {}\n            if sql is not None:\n                for i in sql:\n                    # 判断断言类型为查询类型的时候，\n                    if i[0:6].upper() == 'SELECT':\n                        sql_date = self.query(sql=i)[0]\n                        for key, value in sql_date.items():\n                            data[key] = value\n                    else:\n                        self.execute(sql=i)\n            return data\n        except IndexError as exc:\n>           raise DataAcquisitionFailed(f\"sql 数据查询失败，请检查setup_sql语句是否正确【{i}】\") from exc\nE           utils.other_tools.exceptions.DataAcquisitionFailed: sql 数据查询失败，请检查setup_sql语句是否正确【SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id=\"USR22082018194900001003CB70029\" and status=1 ORDER BY create_time ASC LIMIT 1) LIMIT 1】\n\nutils\\mysql_tool\\mysql_control.py:138: DataAcquisitionFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1669002832865,"stop":1669002832944,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"work_login_init","time":{"start":1669002832944,"stop":1669002833147,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"case_skip","time":{"start":1669002865878,"stop":1669002865878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"feature","value":"计划服务"},{"name":"story","value":"查询课时详情接口"},{"name":"epic","value":"Gymery"},{"name":"tag","value":"Plan"},{"name":"parentSuite","value":"test_case.Plan"},{"name":"suite","value":"test_lesson_details"},{"name":"subSuite","value":"TestLessonDetails"},{"name":"host","value":"GnYuHao"},{"name":"thread","value":"89080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.Plan.test_lesson_details"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"in_data","value":"{'url': 'http://192.168.5.140:9000/s/v1/fitness/plan/lesson-details', 'method': 'GET', 'detail': '不登录时查询课时详情', 'assert_data': {'errorCode': {'jsonpath': '$.code', 'type': '==', 'value': -1, 'AssertType': None, 'message': 'errorCode 断言为 0'}, 'message': {'jsonpath': '$.message', 'type': '==', 'value': '数据为空', 'AssertType': None, 'message': 'message断言'}}, 'headers': {'Content-Type': 'application/json'}, 'requestType': 'PARAMS', 'is_run': None, 'data': {'lessonId': ''}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.id', 'set_cache': None, 'replace_key': '$.data.lessonId'}]}], 'sql': None, 'setup_sql': ['SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id=\"$cache{gymera}\" and status=1 ORDER BY create_time ASC LIMIT 1) LIMIT 1'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["Plan"]},"source":"1b9557cd3fa7aaf4.json","parameterValues":["{'url': 'http://192.168.5.140:9000/s/v1/fitness/plan/lesson-details', 'method': 'GET', 'detail': '不登录时查询课时详情', 'assert_data': {'errorCode': {'jsonpath': '$.code', 'type': '==', 'value': -1, 'AssertType': None, 'message': 'errorCode 断言为 0'}, 'message': {'jsonpath': '$.message', 'type': '==', 'value': '数据为空', 'AssertType': None, 'message': 'message断言'}}, 'headers': {'Content-Type': 'application/json'}, 'requestType': 'PARAMS', 'is_run': None, 'data': {'lessonId': ''}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.id', 'set_cache': None, 'replace_key': '$.data.lessonId'}]}], 'sql': None, 'setup_sql': ['SELECT id from t_plan_lessons WHERE plan_id = (SELECT id FROM t_plan WHERE gymer_id=\"$cache{gymera}\" and status=1 ORDER BY create_time ASC LIMIT 1) LIMIT 1'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"]}